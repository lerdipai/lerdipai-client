<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd       
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd           
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd       
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<bean id="lerdipaiDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${lerdipai.jdbc.url}" />
		<property name="username" value="${lerdipai.jdbc.username}" />
		<property name="password" value="${lerdipai.jdbc.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${lerdipai.jdbc.initialPoolSize}" />
		<property name="minIdle" value="${lerdipai.jdbc.minPoolSize}" />
		<property name="maxActive" value="${lerdipai.jdbc.maxPoolSize}" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 1" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		<!-- 解密数据库密码的配置 -->
		<property name="filters" value="config,log4j2" />
		<property name="connectionProperties" value="config.decrypt=true;config.decrypt.key=${lerdipai.jdbc.publickey}" />
	</bean>

	<!-- mybatis -->
	<bean id="lerdipaiSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="lerdipaiDataSource" />
		<property name="configLocation">
			<value>classpath:framework_mybatis/mybatisConfig.xml</value>
		</property>
		<property name="mapperLocations">
			<list>
				<value>classpath:framework_mybatis/conditionQuery.xml</value>
				<value>classpath:/mapper/*.xml</value>
			</list>
		</property>
	</bean>

	<bean id="lerdipaiTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="lerdipaiDataSource" />
	</bean>

	<bean id="lerdipaiTransactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="lerdipaiTransactionManager" />
	</bean>

	<!--inject dao list -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="lerdipaiSqlSessionFactory" />
		<property name="basePackage" value="com.lerdipai.client.dao" />
	</bean>

	<tx:annotation-driven transaction-manager="lerdipaiTransactionManager" />
</beans>